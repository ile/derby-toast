// Generated by CoffeeScript 1.7.1
var Model, config, racer;

racer = require('racer');

Model = racer.Model;

config = {
  filename: __filename,
  ns: 'derby-ui-toast',
  styles: [__dirname + '/../css/toast']
};

module.exports = function(app, options) {
  var default_options;
  default_options = {
    sticky: false,
    timeout: 5000
  };
  Model.prototype.toast = function(type, msg, options) {
    var remove, sticky, timeout, toast;
    options || (options = default_options);
    sticky = options.sticky || default_options.sticky;
    timeout = options.timeout || default_options.timeout;
    toast = {
      id: this.id(),
      type: type,
      msg: msg
    };
    if (options.click) {
      toast.click = options.click;
    }
    remove = (function(_this) {
      return function() {
        var i, t, toasts, _i, _len;
        toasts = _this.get("_page.toast");
        if (toasts) {
          for (i = _i = 0, _len = toasts.length; _i < _len; i = ++_i) {
            t = toasts[i];
            if (t.id === toast.id) {
              if (t.click) {
                t.click();
              }
              _this.remove("_page.toast", i);
              return;
            }
          }
        }
      };
    })(this);
    return this.unshift("_page.toast", toast, function(err) {
      if (!sticky) {
        return setTimeout(remove, timeout);
      }
    });
  };
  app.fn('toast.remove', function(e, el) {
    var _ref, _ref1, _ref2;
    if ((app != null ? (_ref = app.model) != null ? (_ref1 = _ref.at(el)) != null ? (_ref2 = _ref1.path()) != null ? _ref2.substring(0, 12) : void 0 : void 0 : void 0 : void 0) === '_page.toast.') {
      return app.model.at(el).remove();
    }
  });
  return app.createLibrary(config, options);
};
